import logging
from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from .states import ProcessingStates

logger = logging.getLogger(__name__)

# Miscellaneous handlers router
misc_router = Router()


@misc_router.message()
async def handle_unknown(message: Message, state: FSMContext):
    """Handle unknown messages."""
    current_state = await state.get_state()
    
    if current_state == ProcessingStates.waiting_for_file:
        await message.answer("üìÑ –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª (.txt –∞–±–æ .docx)")
    elif current_state == ProcessingStates.waiting_for_prompt:
        await message.answer("‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–º—Ç –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ–º—Ç'")
    elif current_state == ProcessingStates.waiting_for_outline_approval:
        await message.answer("ü§î –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥—Ç–≤–µ—Ä–¥—å—Ç–µ –∞–±–æ –≤—ñ–¥—Ö–∏–ª—ñ—Ç—å outline, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–Ω–æ–ø–∫–∏")
    elif current_state == ProcessingStates.waiting_for_sonnet_prompt:
        await message.answer("‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º—Ç –¥–ª—è Claude Sonnet 4 –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ–º—Ç'")
    elif current_state == ProcessingStates.waiting_for_volume_choice:
        await message.answer("üìä –û–±–µ—Ä—ñ—Ç—å —Ü—ñ–ª—å–æ–≤–∏–π –æ–±—Å—è–≥ (15K, 30K, 40K –∞–±–æ 60K —Å–∏–º–≤–æ–ª—ñ–≤) –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–Ω–æ–ø–∫–∏")

    elif current_state == ProcessingStates.processing:
        await message.answer("‚è≥ –ó–∞—á–µ–∫–∞–π—Ç–µ, –π–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É...")
    else:
        await message.answer("‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏ –∞–±–æ /start –¥–ª—è –ø–æ—á–∞—Ç–∫—É.")